#!/bin/bash

if [[ -z $STORE_FILE ]]; then
    STORE_FILE=~/.ti
fi

if [[ -z $STORE_CURRENT_FILE ]]; then
    STORE_CURRENT_FILE="$STORE_FILE-current"
fi

action-start () {
    if [[ -f $STORE_CURRENT_FILE ]]; then
        echo 'A task is already active. Please stop it first.' >&2
        return 1
    fi
    project_name="$1"
    echo "$project_name [$(date)]" >> $STORE_CURRENT_FILE
    shift
    _NON_INTERACTIVE=1 action-note "$*"
}

action-stop () {
    _NON_INTERACTIVE=1 action-note "$*"
    echo >> $STORE_FILE
    project="$(head -1 $STORE_CURRENT_FILE | sed 's/ \[.\+$//')"
    head -1 $STORE_CURRENT_FILE | sed "s^$^ to [$(date)]^" >> $STORE_FILE
    cat $STORE_CURRENT_FILE | awk 'NR != 1' >> $STORE_FILE
    echo "So you stopped working on $project."
    rm $STORE_CURRENT_FILE
}

action-note () {
    if ! is-working?; then
        echo "For all I know, you aren't working on anything. Where should I be noting this?" >&2
        return 1
    fi
    desc="$*"
    if [[ -z $desc && -z $_NON_INTERACTIVE ]]; then
        "$EDITOR" "$STORE_CURRENT_FILE"
    elif [[ ! -z $desc ]]; then
        echo "  $desc" >> $STORE_CURRENT_FILE
    fi
}

action-status () {
    if [[ ! -f $STORE_CURRENT_FILE ]]; then
        echo "You have not started any project. Use $0 start <project-name> [description]"
        return 1
    fi
    pline="$(head -1 $STORE_CURRENT_FILE)"
    project="$(echo $pline | sed 's/ \[.\+$//')"
    from_time="$(echo $pline | sed 's/^.\+\[//' | sed 's/\]$//')"
    if hash dtime 2>&-; then
        echo "You have been working on '$project' for $(dtime "$from_time")"
    else
        echo "You are working on '$project' since $from_time"
    fi
}

is-working? () {
    [[ -f $STORE_CURRENT_FILE ]]
    return $?
}

list-actions () {
    compgen -A function action- | sed 's/^action-//'
}

main () {
    matching_actions="$(list-actions | grep "^$1")"
    match_count="$(echo "$matching_actions" | wc -l)"
    if [[ $match_count == 0 ]]; then
        echo "No action '$1' found" >&2
    elif [[ $match_count == 1 ]]; then 
        shift
        "action-$matching_actions" "$@"
        return $?
    else
        echo "Ambiguous action name:" >&2
        echo "$matching_actions" | sed 's/^/  /' >&2
    fi
    return 1
}

main "$@"
